/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.64
 * Generated at: 2018-03-24 19:20:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Billing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html ng-app=\"WaterPlant\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"css/responsive.dataTables.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"css/dataTables.bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"css/metisMenu.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"JS/Autocomplete/angucomplete.js\">\r\n");
      out.write("\r\n");
      out.write("<script\tsrc=\"external-js/jquery.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/bootstrap.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/dataTables.bootstrap.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/dataTables.responsive.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/metisMenu.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"external-js/angular.min.js\"></script>\r\n");
      out.write("<script src=\"JS/Billing.js\"></script>\r\n");
      out.write("<script src=\"JS/typeahead.bundle.js\"></script>\r\n");
      out.write("<script src=\"JS/Autocomplete/angucomplete.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$('#masterload').load(\"Menu.jsp\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getProductValue(productPrice){\r\n");
      out.write("\t\t$('input[name=productprice]').val(productPrice);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<title>Billing</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body ng-controller=\"BillingCtrl\">\r\n");
      out.write("\r\n");
      out.write("<div id=\"masterload\"></div>\r\n");
      out.write("<!-- Place the code inside the below div tag -->\r\n");
      out.write("<div id=\"page-wrapper\">\r\n");
      out.write("\t<div  class=\"col-md-10\">\r\n");
      out.write("\r\n");
      out.write("          <!--  <button ng-click=\"FromServlet()\">Fetch data from server</button>\r\n");
      out.write("           <p>First Name : {{person.CustName}}</p>\r\n");
      out.write("           <p>Last Name : {{person.price}}</p> -->\r\n");
      out.write("     \r\n");
      out.write("\t\t<div class=\"row col-sm-12\" ng-hide=\"printMode\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-3\"></div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading text-center\">Billing</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<form role=\"form\" name=\"myproduct\" ng-submit=\"submitForm()\" novalidate>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Product</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 dropdown\" ng-class=\"{ 'has-error' : myproduct.p_pro.$dirty  && myproduct.p_pro.$invalid }\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select class=\"form-control\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-model=\"stockId\" name=\"p_pro\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonchange=\"getProductValue(this.value);\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-options=\"product.stockId as product.stockName product in Products\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>- Select Product -</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- <option data-price=\"\" value=\"1\">Product1</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"2\">Product2</option> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.p_pro.$dirty  && myproduct.p_pro.$invalid\" class=\"help-block\">Select Product.</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Price</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6  \" ng-class=\"{ 'has-error' : myproduct.productprice.$invalid && !myproduct.productprice.$pristine }\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"form-control text-right\" name=\"productprice\" ng-model=\"Product.price\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.productprice.$invalid && !myproduct.productprice.$pristine\" class=\"help-block\">Price is required.</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Quantity</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 text-right \" ng-class=\"{ 'has-error' : myproduct.productqty.$invalid && !myproduct.productqty.$pristine }\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"form-control text-right\" ng-model=\"Quantity\" name=\"productqty\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.productqty.$invalid && !myproduct.productqty.$pristine\" class=\"help-block\">Quantity is required.</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Customer Name {{selectedCountry.originalObject.code}}</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6\"  id=\"the-basics\" ng-class=\"{ 'has-error' : myproduct.cust.$invalid && !myproduct.cust.$pristine }\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- <input class=\"form-control typeahead\" ng-model=\"Customer\" name=\"cust\" oninput=\"this.value=this.value.replace(/[^a-zA-Z]/g,'');\" required> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<angucomplete id=\"ex1\" placeholder=\"Search customer name\" pause=\"100\" selectedobject=\"selectedCountry\" localdata=\"countries\" searchfields=\"name\" titlefield=\"name\" minlength=\"1\" inputclass=\"form-control form-control-sm\r\n");
      out.write("all\" matchclass=\"highlight\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.cust.$invalid && !myproduct.cust.$pristine\" class=\"help-block\">Customer Name is required.</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Payment Type</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 dropdown\" ng-class=\"{ 'has-error' : myproduct.p__type.$dirty  && myproduct.p_payment_type.$invalid }\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select ng-model=\"selectedItem\" class=\"form-control\" name=\"p_payment_type\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tng-options=\"item as item.type for item in PaymentTypeArr\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tng-change=\"getChanged(selectedItem)\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">-- select --</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- <select class=\"form-control\" ng-model=\"PaymentType\" name=\"p_payment_type\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-change=\"getPaymentType(paymentType)\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-options=\"y for (x, y) in PaymentTypeArr\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"x\" disabled>- Select Payment Type -</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- <select ng-change=\"getPaymentType(PaymentType)\" ng-options=\"Payment as payment.type for payment in PaymentTypeArr track by payment.id\" class=\"form-control\" ng-model=\"PaymentType\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{{PaymentType}}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.p_pro_type.$dirty  && myproduct.p_pro.$invalid\" class=\"help-block\">Select Payment Type</p> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>GST</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 text-right \" ng-class=\"{ 'has-error' : myproduct.gst1.$invalid && !myproduct.gst1.$pristine }\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"form-control text-right\" ng-model=\"gst\" name=\"gst1\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p ng-show=\"myproduct.gst1.$invalid && !myproduct.gst1.$pristine\" class=\"help-block\"> GST is required.</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- <select ng-model=\"selectedItem\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-options=\"item as item.name for item in items\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-change=\"getChanged(selectedItem)\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"\">-- select --</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<center><button type=\"submit\" class=\"btn btn-primary\" ng-click=\"addItem(); ToServlet();\" ng-hide=\"printMode\" ng-disabled=\"myproduct.$invalid\">Add\r\n");
      out.write("\t\t\t\tProduct</button><center>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-footer\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-5 \"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-7 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Total :</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 text-right \">{{SubTotal()}}</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-5 \"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-7 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>GST :</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-6 text-right \">{{GST()}}</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-5 \"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-7 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-8 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Grand Total :</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-4 text-right \">{{GrandTotal()}}</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-5 \"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-7 \">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-4 text-right \"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-3\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"panel panel-primary\" ng-show=\"printMode\">\r\n");
      out.write("\t\t\t<div class=\"panel-heading text-center\">Products</div>\r\n");
      out.write("\t\t\t<!-- /.panel-heading -->\r\n");
      out.write("\t\t\t<div class=\"panel-body col-sm-12\">\r\n");
      out.write("\t\t\t\t<div class=\"table col-sm-6\">\r\n");
      out.write("\t\t\t\t\t<table width=\"10%\" class=\"table table-striped\">\r\n");
      out.write("\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">Product</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">Price</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">Quantity</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">Customer Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">GST</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"col-sm-2\">Total</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr ng-repeat=\"item in invoice.items\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.PRoduct}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.PRice}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.QUantity}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.CUstomer}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.GSt}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{item.GrandTotal}}</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href ng-click=\"remove($index)\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"btn btn-danger\">X</a>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-6\"></div>\r\n");
      out.write("\t\t\t\t<!-- /.table-responsive -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- /.panel-body -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- /.panel -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div class=\" col-sm-12 text-center\" ng-show=\"printMode\">\r\n");
      out.write("\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\tGrand Total :{{ getSubTotal() }}\r\n");
      out.write("\t\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"row noPrint actions text-center\">\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\" ng-show=\"printMode\"\r\n");
      out.write("\t\t\t\tng-click=\"printInfo() \">Print</button> \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\" ng-hide=\"printMode\"\r\n");
      out.write("\t\t\t\tng-click=\"printMode = true; count = count + 1; removeItem(0,count)\"\r\n");
      out.write("\t\t\t\tng-init=\"count=0\">Turn On Print Mode</button>\r\n");
      out.write("\t\t\t\t<button\r\n");
      out.write("\t\t\t\tclass=\"btn btn-primary\" ng-show=\"printMode\"\r\n");
      out.write("\t\t\t\tng-click=\"printMode = false;\">Turn Off Print Mode</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar substringMatcher = function(strs) {\r\n");
      out.write("  return function findMatches(q, cb) {\r\n");
      out.write("    var matches, substringRegex;\r\n");
      out.write("\r\n");
      out.write("    // an array that will be populated with substring matches\r\n");
      out.write("    matches = [];\r\n");
      out.write("\r\n");
      out.write("    // regex used to determine if a string contains the substring `q`\r\n");
      out.write("    substrRegex = new RegExp(q, 'i');\r\n");
      out.write("\r\n");
      out.write("    // iterate through the pool of strings and for any string that\r\n");
      out.write("    // contains the substring `q`, add it to the `matches` array\r\n");
      out.write("    $.each(strs, function(i, str) {\r\n");
      out.write("      if (substrRegex.test(str)) {\r\n");
      out.write("        matches.push(str);\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    cb(matches);\r\n");
      out.write("  };\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("var states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',\r\n");
      out.write("  'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii',\r\n");
      out.write("  'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',\r\n");
      out.write("  'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',\r\n");
      out.write("  'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',\r\n");
      out.write("  'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\r\n");
      out.write("  'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island',\r\n");
      out.write("  'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\r\n");
      out.write("  'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n");
      out.write("];\r\n");
      out.write("\r\n");
      out.write("$('#the-basics .typeahead').typeahead({\r\n");
      out.write("  hint: true,\r\n");
      out.write("  highlight: true,\r\n");
      out.write("  minLength: 2\r\n");
      out.write("},\r\n");
      out.write("{\r\n");
      out.write("  name: 'states',\r\n");
      out.write("  source: substringMatcher(states)\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
